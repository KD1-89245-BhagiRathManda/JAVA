/*
 * 1. Create a class called Invoice that a hardware store might use to represent 
an invoice for an item sold at the store. An Invoice should include four 
pieces of information as instance variables—a part number (type String), a 
part description (type String), a quantity of the item being purchased (type 
int) and a price per item (double). Your class should have a constructor 
that initializes the four instance variables. Provide a set and a get method 
for each instance variable. calculates the invoice amount (i.e. multiplies the 
quantity by the price per item), then returns the amount as a double value. 
 
If the quantity is not positive, it should be set to 0. 
If the price per item is not positive, it should be set to 0.0. 
Write a test application named InvoiceTest that demonstrate class Invoice’s 
capabilities.

Create the Invoice Class:

Define a class named Invoice.
Declare four instance variables (attributes) within the class:
partNumber (String)
partDescription (String)
quantity (int)
pricePerItem (double)
Create a constructor for the Invoice class that accepts four parameters (for the four instance variables) and initializes the instance variables with those values.
Implement setter (set) methods for each of the four instance variables.
Within the quantity setter, ensure that if the provided quantity is not positive, set the quantity to 0.
Within the pricePerItem setter, ensure that if the provided price is not positive, set the pricePerItem to 0.0.
Implement getter (get) methods for each of the four instance variables.
Create a method named getInvoiceAmount() that calculates the invoice amount by multiplying the quantity by the pricePerItem and returns the result as a double.
Create the InvoiceTest Application:

Create a separate class named InvoiceTest with a main method.
Inside the main method:
Create instances (objects) of the Invoice class, providing different values for the part number, description, quantity, and price.
Use the getter methods to retrieve the values of the instance variables for each Invoice object.
Use the getInvoiceAmount() method to calculate and display the invoice amount for each Invoice object.
Show that the setter methods work, by changing the values of the invoice objects, and then printing out the new values, and new invoice amounts.
 */
package asignment2;

class invoice{
	
	String partNO;
	String partDescription;
	int quantity;
	double pricePerItem;
	
	invoice(String partNO, String partDescription, int quantity, double pricePerItem){
		this.partNO = partNO;
		this.partDescription = partDescription;
		this.quantity = quantity;
		this.pricePerItem = pricePerItem;
	}
	public String getPartNO() {
		return partNO;
	}
	public void setPartNO(String partNO) {
		this.partNO = partNO;
	}
	public String getPartDescription() {
		return partDescription;
	}
	public void setPartDescription(String partDescription) {
		this.partDescription = partDescription;
	}
	public int getQuantity() {
		return quantity;
	}
	public void setQuantity(int quantity) {
		this.quantity = quantity;
	}
	public double getPricePerItem() {
		return pricePerItem;
	}
	public void setPricePerItem(double pricePerItem) {
		this.pricePerItem = pricePerItem;
	}
	
	void getInvoiceAmount(){
		double tBill = 0;
		if(quantity<0) {
			setQuantity()
		}
		tBill = quantity*pricePerItem;
		System.out.println("Your Total Bill is:- "+ tBill);
	}
	
}

public class q1 {

	public static void main(String[] args) {
		
		invoice i = new invoice("A237", "HeadLight", 5, 200);
		i.getInvoiceAmount();
		
	}

}
